# Subspace tests
#
# Written by Konrad Hinsen
# last revision: 2007-3-22
#

import unittest
import MMTK
from MMTK.Proteins import Protein
from MMTK.ForceFields import HarmonicForceField
from MMTK.Subspace import RigidMotionSubspace
from MMTK import NormalModes

class PeptideTest(unittest.TestCase):

    """
    Test mode projections on a subspace
    """

    def setUp(self):
        self.universe = MMTK.InfiniteUniverse(HarmonicForceField())
        self.universe.peptide = Protein('bala1')
        self.subspace = RigidMotionSubspace(self.universe,
                                            self.universe.peptide.residues())

    def test_subspaceProjections(self):
        emodes = NormalModes.EnergeticModes(self.universe)
        p = self.subspace.projectionOf(emodes.rawMode(6)).norm()
        self.assertAlmostEqual(p, 0.9322242598803437)
        p = self.subspace.projectionOf(emodes.rawMode(7)).norm()
        self.assertAlmostEqual(p, 0.9462254718599316)
        p = self.subspace.projectionOf(emodes.rawMode(8)).norm()
        self.assertAlmostEqual(p, 0.9267376072638698)
        p = self.subspace.projectionOf(emodes.rawMode(9)).norm()
        self.assertAlmostEqual(p, 0.9517833097404785)
        p = self.subspace.projectionOf(emodes.rawMode(10)).norm()
        self.assertAlmostEqual(p, 0.9192284524068041)
        p = self.subspace.projectionOf(emodes.rawMode(11)).norm()
        self.assertAlmostEqual(p, 0.4950322679744081)
        p = self.subspace.projectionOf(emodes.rawMode(12)).norm()
        self.assertAlmostEqual(p, 0.9655750904174839)
        p = self.subspace.projectionOf(emodes.rawMode(13)).norm()
        self.assertAlmostEqual(p, 0.9014696855488994)
        p = self.subspace.projectionOf(emodes.rawMode(14)).norm()
        self.assertAlmostEqual(p, 0.8697365224866428)
        p = self.subspace.projectionOf(emodes.rawMode(15)).norm()
        self.assertAlmostEqual(p, 0.7730056445782664)
        p = self.subspace.projectionOf(emodes.rawMode(16)).norm()
        self.assertAlmostEqual(p, 0.8838199312994008)
        p = self.subspace.projectionOf(emodes.rawMode(17)).norm()
        self.assertAlmostEqual(p, 0.5737398235455864)
        p = self.subspace.projectionOf(emodes.rawMode(18)).norm()
        self.assertAlmostEqual(p, 0.7057302370331272)
        p = self.subspace.projectionOf(emodes.rawMode(19)).norm()
        self.assertAlmostEqual(p, 0.3424214159201944)
        p = self.subspace.projectionOf(emodes.rawMode(20)).norm()
        self.assertAlmostEqual(p, 0.5885468503837840)
        p = self.subspace.projectionOf(emodes.rawMode(21)).norm()
        self.assertAlmostEqual(p, 0.4333674301296027)
        p = self.subspace.projectionOf(emodes.rawMode(22)).norm()
        self.assertAlmostEqual(p, 0.2491254745450491)
        p = self.subspace.projectionOf(emodes.rawMode(23)).norm()
        self.assertAlmostEqual(p, 0.2119559248130914)
        p = self.subspace.projectionOf(emodes.rawMode(24)).norm()
        self.assertAlmostEqual(p, 0.4028094188407100)
        p = self.subspace.projectionOf(emodes.rawMode(25)).norm()
        self.assertAlmostEqual(p, 0.1608763337943279)
        p = self.subspace.projectionOf(emodes.rawMode(26)).norm()
        self.assertAlmostEqual(p, 0.2060983293242264)
        p = self.subspace.projectionOf(emodes.rawMode(27)).norm()
        self.assertAlmostEqual(p, 0.3304830568849808)
        p = self.subspace.projectionOf(emodes.rawMode(28)).norm()
        self.assertAlmostEqual(p, 0.3355232273195539)
        p = self.subspace.projectionOf(emodes.rawMode(29)).norm()
        self.assertAlmostEqual(p, 0.2450139909420241)
        p = self.subspace.projectionOf(emodes.rawMode(30)).norm()
        self.assertAlmostEqual(p, 0.1037940415545036)
        p = self.subspace.projectionOf(emodes.rawMode(31)).norm()
        self.assertAlmostEqual(p, 0.0449058387352367)
        p = self.subspace.projectionOf(emodes.rawMode(32)).norm()
        self.assertAlmostEqual(p, 0.0818077542082650)
        p = self.subspace.projectionOf(emodes.rawMode(33)).norm()
        self.assertAlmostEqual(p, 0.1710068451544071)
        p = self.subspace.projectionOf(emodes.rawMode(34)).norm()
        self.assertAlmostEqual(p, 0.2541211685207877)
        p = self.subspace.projectionOf(emodes.rawMode(35)).norm()
        self.assertAlmostEqual(p, 0.2231798308970338)
        p = self.subspace.projectionOf(emodes.rawMode(36)).norm()
        self.assertAlmostEqual(p, 0.1277342580637205)
        p = self.subspace.projectionOf(emodes.rawMode(37)).norm()
        self.assertAlmostEqual(p, 0.0667396521918318)
        p = self.subspace.projectionOf(emodes.rawMode(38)).norm()
        self.assertAlmostEqual(p, 0.1590645486036234)
        p = self.subspace.projectionOf(emodes.rawMode(39)).norm()
        self.assertAlmostEqual(p, 0.3109558405893312)
        p = self.subspace.projectionOf(emodes.rawMode(40)).norm()
        self.assertAlmostEqual(p, 0.4315424420284669)
        p = self.subspace.projectionOf(emodes.rawMode(41)).norm()
        self.assertAlmostEqual(p, 0.4361662145295604)
        p = self.subspace.projectionOf(emodes.rawMode(42)).norm()
        self.assertAlmostEqual(p, 0.2164795646784100)
        p = self.subspace.projectionOf(emodes.rawMode(43)).norm()
        self.assertAlmostEqual(p, 0.2653371406610991)
        p = self.subspace.projectionOf(emodes.rawMode(44)).norm()
        self.assertAlmostEqual(p, 0.3719737740169737)
        p = self.subspace.projectionOf(emodes.rawMode(45)).norm()
        self.assertAlmostEqual(p, 0.4031639430066957)
        p = self.subspace.projectionOf(emodes.rawMode(46)).norm()
        self.assertAlmostEqual(p, 0.1923409870360145)
        p = self.subspace.projectionOf(emodes.rawMode(47)).norm()
        self.assertAlmostEqual(p, 0.0837490388595696)
        p = self.subspace.projectionOf(emodes.rawMode(48)).norm()
        self.assertAlmostEqual(p, 0.1506587981263065)
        p = self.subspace.projectionOf(emodes.rawMode(49)).norm()
        self.assertAlmostEqual(p, 0.1541813230053046)
        p = self.subspace.projectionOf(emodes.rawMode(50)).norm()
        self.assertAlmostEqual(p, 0.1253852457937046)
        p = self.subspace.projectionOf(emodes.rawMode(51)).norm()
        self.assertAlmostEqual(p, 0.0451519999446156)
        p = self.subspace.projectionOf(emodes.rawMode(52)).norm()
        self.assertAlmostEqual(p, 0.0459616161764973)
        p = self.subspace.projectionOf(emodes.rawMode(53)).norm()
        self.assertAlmostEqual(p, 0.0089199752625585)
        p = self.subspace.projectionOf(emodes.rawMode(54)).norm()
        self.assertAlmostEqual(p, 0.0171976043311059)
        p = self.subspace.projectionOf(emodes.rawMode(55)).norm()
        self.assertAlmostEqual(p, 0.0607892829300145)
        p = self.subspace.projectionOf(emodes.rawMode(56)).norm()
        self.assertAlmostEqual(p, 0.0346108991769874)
        p = self.subspace.projectionOf(emodes.rawMode(57)).norm()
        self.assertAlmostEqual(p, 0.0560042266977706)
        p = self.subspace.projectionOf(emodes.rawMode(58)).norm()
        self.assertAlmostEqual(p, 0.0333007411302587)
        p = self.subspace.projectionOf(emodes.rawMode(59)).norm()
        self.assertAlmostEqual(p, 0.0589746415638412)
        p = self.subspace.projectionOf(emodes.rawMode(60)).norm()
        self.assertAlmostEqual(p, 0.0662164228154263)
        p = self.subspace.projectionOf(emodes.rawMode(61)).norm()
        self.assertAlmostEqual(p, 0.0569476398662924)
        p = self.subspace.projectionOf(emodes.rawMode(62)).norm()
        self.assertAlmostEqual(p, 0.1614306321754193)
        p = self.subspace.projectionOf(emodes.rawMode(63)).norm()
        self.assertAlmostEqual(p, 0.1723541658844633)
        p = self.subspace.projectionOf(emodes.rawMode(64)).norm()
        self.assertAlmostEqual(p, 0.2389830288682290)
        p = self.subspace.projectionOf(emodes.rawMode(65)).norm()
        self.assertAlmostEqual(p, 0.2413810182829330)


if __name__ == '__main__':
    unittest.main()
